import org.flywaydb.gradle.task.*

buildscript {
    ext {
        kotlin_version = '1.2.71'
        postgresql_version = '42.2.2'
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.postgresql:postgresql:$postgresql_version"
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.2.1"
    id 'java'
    id 'maven'
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
}

apply plugin: 'kotlin'

group = 'com.swanpipe'
description ="""
Flyway DB Migration for SwanPipe : ${project.name}"""

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {

    compile "org.flywaydb:flyway-core:5.2.1"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.slf4j:slf4j-jdk14:1.7.25"
    
    // https://mvnrepository.com/artifact/com.opentable.components/otj-pg-embedded
    testCompile group: 'com.opentable.components', name: 'otj-pg-embedded', version: '0.12.4'

    testCompile "org.assertj:assertj-core:3.8.0"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.2.0"
    // the jupiter-engine version needs to be kept in line with the junit-jupiter-api
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.2.0"

}

jar {

    /**
     *  Create a fat jar
     */
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree( it ) }
    }
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/postgres'
    user = 'postgres'
    password = 'password'
    schemas = [ 'public' ]
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}



